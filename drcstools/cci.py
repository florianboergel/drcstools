# AUTOGENERATED! DO NOT EDIT! File to edit: 05_cci.ipynb (unless otherwise specified).

__all__ = ['stormdetection']

# Cell
import xarray as xr
import numpy as np
import matplotlib.pyplot as plt

# Cell
from .derivative import *


def stormdetection(stormobj, slpname = "slp", pmax = 100000):

    stormtrack.derivative(slpname, N = 10, dim = stormobj._get_name_longitude())
    stormtrack.derivative(slpname, N = 10, dim = stormobj._get_name_latitude())


    zero_crossings_x = xr.where(xr.ufuncs.signbit(stormtrack.ds.ddlonslp).astype(int).diff("lon") != 0, 1, 0)
    zero_crossings_y = xr.where(xr.ufuncs.signbit(stormtrack.ds.ddlatslp).astype(int).diff("lat") != 0, 1, 0)

    zero_crossings = xr.where((zero_crossings_x == 1) & (zero_crossings_y == 1), 1, 0)

    dP = 0.5 * (stormobj.ds.ddlonslp + stormobj.ds.ddlatslp)
    Pzonal = dP.mean([stormobj._get_name_time(), stormobj._get_name_latitude()])

    lows = stormobj.ds[slpname].where(zero_crossings == 1).where(dP - Pzonal > 1)
    lows = lows.where(lows < 100000)
    return lows